#define HEIST_VICTORY
[kill]
[/kill]
[endlevel]
  result=continue
[/endlevel]
#enddef

#define CREATE_UNIT TYPE SIDE X Y
[unit]
  side={SIDE}
  type={TYPE}
  x={X}
  y={Y}
[/unit]
#enddef

#define CREATE_LEADER TYPE DESC UDESC SIDE X Y
[unit]
  canrecruit=1
  side={SIDE}
  description={DESC}
  user_description={UDESC}
  type={TYPE}
  x={X}
  y={Y}
[/unit]
#enddef

#define CREATE_UNIT_CYCLE TYPE1 TYPE2 TYPE3 TYPE4
{VARIABLE addunittypes.index 0}
{VARIABLE addunittypes.count 4}
{VARIABLE addunittypes.type0 ({TYPE1})}
{VARIABLE addunittypes.type1 ({TYPE2})}
{VARIABLE addunittypes.type2 ({TYPE3})}
{VARIABLE addunittypes.type3 ({TYPE4})}
{VARIABLE typeindex 3}
{VARIABLE curtype $addunittypes.type3}
[while]
  [variable]
    name=curtype
    equals=none
  [/variable]
  [do]
    {VARIABLE_OP typeindex add -1}
    {VARIABLE_OP curtype to_variable addunittypes.type|$typeindex|}
    {VARIABLE_OP addunittypes.count add -1}
  [/do]
[/while]
{CLEAR_VARIABLE curtype}
{CLEAR_VARIABLE typeindex}
#enddef

#define GET_NEXT_UNIT_TYPE TYPE_VAR
{VARIABLE_OP ({TYPE_VAR}) to_variable addunittypes.type|$addunittypes.index|}
#enddef

#define CREATE_NEXT_UNIT SIDE X Y
{VARIABLE_OP type to_variable addunittypes.type|$addunittypes.index|}
{VARIABLE_OP addunittypes.index add 1}
[if]
  [variable]
    name=addunittypes.index
    less_than=$addunittypes.count
  [/variable]
  [else]
    {VARIABLE addunittypes.index 0}
  [/else]
[/if]
{CREATE_UNIT $type ({SIDE}) ({X}) ({Y})}
{CLEAR_VARIABLE type}
#enddef

#define CREATE_ROW SIDE X Y N
{VARIABLE i 0}
[while]
  [variable]
    name=i
    less_than={N}
  [/variable]
  [do]
    {VARIABLE x_cur ({X})}
    {VARIABLE_OP x_cur add $i}
    {CREATE_NEXT_UNIT ({SIDE}) $x_cur ({Y})}
    {VARIABLE_OP i add 1}
  [/do]
[/while]
{CLEAR_VARIABLE i}
{CLEAR_VARIABLE x_cur}
#enddef

#define CREATE_COL SIDE X Y N
{VARIABLE i 0}
[while]
  [variable]
    name=i
    less_than={N}
  [/variable]
  [do]
    {VARIABLE y_cur ({Y})}
    {VARIABLE_OP y_cur add $i}
    {CREATE_NEXT_UNIT ({SIDE}) ({X}) $y_cur}
    {VARIABLE_OP i add 1}
  [/do]
[/while]
{CLEAR_VARIABLE i}
{CLEAR_VARIABLE y_cur}
#enddef

#define UNIT_COUNT SIDE
[store_unit]
  variable=unit_count_store
  kill=no
  [filter]
    x=1-100
    y=1-100
    side={SIDE}
  [/filter]
[/store_unit]
{VARIABLE unit_count $unit_count_store.length}
{CLEAR_VARIABLE unit_count_store}
#enddef

#define STORE_SIDE VAR SIDE KILL
[store_unit]
  variable={VAR}
  kill={KILL}
  [filter]
    side={SIDE}
    x=1-200
    y=1-200
  [/filter]
[/store_unit]
#enddef

#define SET_STORED_ATTRIBUTE VAR INDEX ATT_VAR ATT_VAL
{VARIABLE_OP att format (|{VAR}|[|{INDEX}|].|{ATT_VAR}|)}
{VARIABLE $att ({ATT_VAL})}
{CLEAR_VARIABLE att}
#enddef

#define UNSTORE_INDEX VAR INDEX SIDE X Y
{VARIABLE_OP cur_unit format (|{VAR}|[|{INDEX}|])}
{SET_STORED_ATTRIBUTE ({VAR}) ({INDEX}) x ({X})}
{SET_STORED_ATTRIBUTE ({VAR}) ({INDEX}) y ({Y})}
{SET_STORED_ATTRIBUTE ({VAR}) ({INDEX}) side ({SIDE})}
{SET_STORED_ATTRIBUTE ({VAR}) ({INDEX}) status.stone off}

{VARIABLE_OP moves format (|{VAR}|[|{INDEX}|].moves)}
#Ensure that every player can move when unstored
[if]
  [variable]
    name=$moves
    less_than=4
  [/variable]
  [then]
    {VARIABLE $moves 4}
  [/then]
[/if]
[unstore_unit]
  variable=$cur_unit
  find_vacant=yes
[/unstore_unit]

{CLEAR_VARIABLE cur_unit}
{CLEAR_VARIABLE moves}
#enddef

#define UNSTORE_UNIT VAR_STORE DESC SIDE X Y
{VARIABLE_OP len to_variable (|{VAR_STORE}|.length)}
{VARIABLE found_unit no}
{VARIABLE i 0}
[while]
  [variable]
    name=i
    less_than=$len
  [/variable]
  [variable]
    name=found_unit
    equals=no
  [/variable]
  [do]
    {VARIABLE desc none}
    {VARIABLE_OP desc to_variable ({VAR_STORE}[$i].description)}
    [if]
      [variable]
        name=desc
        equals={DESC}
      [/variable]
      [then]
        {UNSTORE_INDEX ({VAR_STORE}) $i ({SIDE}) ({X}) ({Y})}
        {VARIABLE found_unit yes}
      [/then]
    [/if]
    {VARIABLE_OP i add 1}
  [/do]
[/while]
{CLEAR_VARIABLE store}
{CLEAR_VARIABLE desc}
#enddef

#define UNSTORE_SIDE VAR_STORE SIDE X_LIST Y_LIST
[store_locations]
  variable=unstore_locs
  x={X_LIST}
  y={Y_LIST}
[/store_locations]

#unstore side at locations
{VARIABLE j 0}
{FOREACH ({VAR_STORE}) i}
  {VARIABLE_OP xx format $unstore_locs[$j].x}
  {VARIABLE_OP yy format $unstore_locs[$j].y}
  {UNSTORE_INDEX ({VAR_STORE}) $i ({SIDE}) $xx $yy}
  #Get next location
  {VARIABLE_OP j add 1}
  [if]
    [variable]
      name=j
      less_than=$unstore_locs.length
    [/variable]
    [else]
      {VARIABLE j 0}
    [/else]
  [/if]
{NEXT i}
{CLEAR_VARIABLE xx}
{CLEAR_VARIABLE yy}
{CLEAR_VARIABLE i}
{CLEAR_VARIABLE j}
{CLEAR_VARIABLE unstore_locs}
#enddef

#define DIE_DEFEAT DESC_K DESC_M MSG
[event]
  name=die
  [filter]
    description={DESC_K}
  [/filter]
  [message]
    description={DESC_M}
    message={MSG}
  [/message]
  [endlevel]
    result=defeat
  [/endlevel]
[/event]
#enddef

#define FLASH_SCREEN COLOR_VAR N
{VARIABLE i 0}
[while]
  [variable]
    name=i
    less_than={N}
  [/variable]
  [do]
    [delay]
      time=10
    [/delay]
    [colour_adjust]
      {COLOR_VAR}=200
    [/colour_adjust]
    [delay]
      time=10
    [/delay]
    [colour_adjust]
      {COLOR_VAR}=0
    [/colour_adjust]
    {VARIABLE_OP i add 1}
  [/do]
[/while]
#enddef
